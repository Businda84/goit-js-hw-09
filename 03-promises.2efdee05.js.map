{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAkCC,SAASC,EAAcC,EAAUC,GAClC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACtB,MAAMC,EAAgBC,KAAKC,SAAW,GACxCC,YAAW,KACLH,EACFF,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAE1BA,EAAM,G,CA1CCQ,SAASC,cAAc,SAK/BC,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEC,iBAEF,IAAIC,EAAW,EACZC,EAAQC,OAAOJ,EAAEK,cAAchB,MAAMiB,OACxC,MAAMC,EAAYH,OAAOJ,EAAEK,cAAcG,KAAKC,QACxCC,EAAcN,OAAOJ,EAAEK,cAAcM,OAAOF,QAElD,GACAN,EAAM,GAAGI,EAAU,GAAGG,EAAY,EAGhC,OAEF,IAAK,IAAIE,EAAI,EAAGA,EAAIT,EAAOS,GAAK,EAC9BV,GAAY,EACZf,EAAce,EAAUC,GACrBU,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MAChByB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAqB5B,QAAiBC,MAAU,IAE1E4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAClByB,EAAA7B,GAAS8B,OAAOG,QAAQ,sBAAoB9B,QAAeC,MAAU,IAEzEc,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\nconst formEl = document.querySelector('.form');\n\n\n\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  let position = 0;\n let delay = Number(e.currentTarget.delay.value);\n  const inputStep = Number(e.currentTarget.step.values);\n  const inputAmount = Number(e.currentTarget.amount.values);\n\n  if (\n  delay<0||inputStep<0||inputAmount<0\n  ) {\n    \n    return\n}\n  for (let i = 0; i < delay; i += 1) {\n    position += 1;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n         Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += inputStep;\n  }\n  };\n function createPromise(position, delay) {\nreturn new Promise((resolve, reject) => {\n       const shouldResolve = Math.random() > 0.3;\n     setTimeout(() => {\n       if (shouldResolve) {\n         resolve({position, delay})\n       } else {\n         reject({position, delay})\n       }\n     }, delay);\n  \n  \n   });\n\n};\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","position1","delay1","Number","currentTarget","value","inputStep","step","values","inputAmount","amount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.2efdee05.js.map"}