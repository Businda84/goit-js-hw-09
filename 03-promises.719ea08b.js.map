{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAEcC,SAASC,cAAc,UACtBD,SAASC,cAAc,SAK/BC,iBAAiB,UAExB,SAAkBC,GAChBA,EAAEC,iBACF,MAAQC,MAAAC,EAAKC,KAAEA,EAAIC,OAAEA,GAAWL,EAAEM,cAAcC,SACjD,IAAIC,EAAaC,OAAON,EAAMO,QAC7B,MAAMC,EAAYF,OAAOL,EAAKM,QACxBE,EAAcH,OAAOJ,EAAOK,QAGlC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrCL,GAAcG,EACdG,EAAcD,EAAGL,GACdO,MAAK,EAACC,SAAEA,EAAQd,MAAEA,MACjBe,EAAAtB,GAASuB,OAAOC,QAAQ,uBAAqBH,QAAiBd,MAAU,IAEzEkB,OAAM,EAACJ,SAAEA,EAAQd,MAAEA,MAClBe,EAAAtB,GAASuB,OAAOC,QAAQ,sBAAoBH,QAAed,MAAU,IAE7EF,EAAEM,cAAce,QAEf,SAASP,EAAcE,EAAUd,GAChC,OAAO,IAAIoB,SAAQ,CAACC,EAASC,KACxB,MAAMC,EAAgBC,KAAKC,SAAW,GACxCC,YAAW,KACLH,EACFF,EAAQ,C,SAACP,E,MAAUd,IAEnBsB,EAAO,C,SAACR,E,MAAUd,GAAO,GAE1BA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["\nimport Notiflix from 'notiflix';\n\nconst BtnEl = document.querySelector('button');\nconst formEl = document.querySelector('.form');\n\n\n\n\nformEl.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n let inputDelay = Number(delay.values);\n  const inputStep = Number(step.values);\n  const inputAmount = Number(amount.values);\n\n\n  for (let i = 1; i <= inputAmount; i += 1){\n    inputDelay += inputStep;\n    createPromise(i, inputDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\ne.currentTarget.reset()\n  };\n function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n       const shouldResolve = Math.random() > 0.3;\n     setTimeout(() => {\n       if (shouldResolve) {\n         resolve({position, delay})\n       } else {\n         reject({position, delay})\n       }\n     }, delay);\n  \n\n   });\n   \n};\n}\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","addEventListener","e","preventDefault","delay","delay1","step","amount","currentTarget","elements","inputDelay","Number","values","inputStep","inputAmount","i","createPromise","then","position","$parcel$interopDefault","Notify","failure","catch","reset","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.719ea08b.js.map"}